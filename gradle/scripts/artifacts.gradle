task sourcesJar(type: Jar, dependsOn: classes) {
	from sourceSets.api.allSource
	classifier = "sources"
}

// Build the Javadocs for the API
task javadocAPI(type: Javadoc) {
	source = sourceSets.api.java
	classpath = sourceSets.api.compileClasspath
}

// Package Javadocs into a Jar
task javadocJar(type: Jar, dependsOn: javadocAPI) {
	from javadocAPI.destinationDir
	classifier = "javadoc"
}

// API dist Jar
task apiJar(type: Jar) {
	from sourceSets.api.output
	classifier = 'api'
}

// Build a non-obfuscated jar
task devJar(type: Jar) {
	manifest {
		attributes(
			'FMLCorePlugin': 'org.squiddev.cctweaks.core.asm.TweaksLoadingPlugin',
			'FMLCorePluginContainsFMLMod': 'true'
		)
	}

	from sourceSets.main.output

	// Package all the org.squiddev dependencies into one file
	from configurations.shade
		.findAll { it.getAbsolutePath().contains("org.squiddev") || it.getAbsolutePath().contains("cctweaks-lua") }
		.collect { it.isDirectory() ? it : zipTree(it) }

	classifier = 'dev'

	exclude("assets/**/docs")
}
